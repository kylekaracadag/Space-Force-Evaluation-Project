@page "/mysurveys"
@attribute [Authorize]
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navManager
@inject IUserData userData
@inject IAccoladeData accoladeData
@inject IJSRuntime JsRuntime 
@inject IDialogService DialogService
@inject INewSurveyData newSurveyData

<PageTitle>My Surveys</PageTitle>

<head>
    <link rel="stylesheet" href="/css/fonts.css" />
</head>

<div>
    <!-- 
    <MudDataGrid Class="mt-15 mb-3 pa-2" Items="@Surveys" MultiSelection="true" Hideable="true" Filterable="true" QuickFilter="@_quickFilter" Loading="@isLoading" Elevation="4" Style="border-radius: 15px; background: #E7F1FF" >
        <ToolBarContent>
            <MudText Typo="Typo.h5">My Surveys</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <Columns >
            <Column T="SurveyDataModel" Field="dateAdministered" Title="Date Administered" />
            <Column T="SurveyDataModel" Field="dateTaken" Title="Date Taken" />
            <Column T="SurveyDataModel" Field="type" Title="Type" />
            <Column T="SurveyDataModel" Filterable="false" Hideable="false">
                <CellTemplate>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary" OnClick="@(() => OpenDialog(context.Item, currentUser))">
                        View More
                    </MudButton>
                </CellTemplate>
            </Column>
        </Columns>
    </MudDataGrid>
    -->

    <MudTable Class="mt-15 mb-3 pa-2" Items="@newSurveyList" Hover="true" Loading="@isLoading">
        <HeaderContent>
            <MudTh>Date Administered</MudTh>
            <MudTh>Date Taken</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.date_administered</MudTd>
            <MudTd>@context.date_taken</MudTd>
            <MudTd>
                <MudButton OnClick="@(() => OpenDialog(context))" Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">
                    View More
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>

</div>








@code {

    bool isLoading;
    UserModel currentUser;
    List<NewSurveyModel> newSurveyList;

    private string _searchString;

    private Func<SurveyDataModel, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.dateAdministered.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    // Function to get the current logged in user.
    private async Task GetLogin()
    {
        currentUser = await AuthenticationStateProviderHelpers.GetUserFromAuth(authProvider, userData);
    }


    private void OpenDialog(NewSurveyModel surveyParam)
    {
        var parameters = new DialogParameters();
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, FullWidth = true };

        //parameters.Add("surveyParam", surveyParam);
        parameters.Add("currentUser", currentUser);
        parameters.Add("survey", surveyParam);
        DialogService.Show<SurveyDialog>("Survey Data", parameters, options);
    }


    protected async override Task OnInitializedAsync()
    {
        isLoading = false;
        currentUser = await AuthenticationStateProviderHelpers.GetUserFromAuth(authProvider, userData);

         
        newSurveyList = await newSurveyData.GetNewSurveysbyUser(currentUser.userID);
        TimeZoneInfo Eastern_Standard_Time = TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time");
        
    }

  
    public class SurveyDataModel
    {
        public DateTime dateTaken
        {
            get;
            set;
        }
        public DateTime dateAdministered
        {
            get;
            set;
        }
        public string type
        {
            get;
            set;
        }
        public NewSurveyModel newSurveyStore
        {
            get;
            set;
        }
    }
}
